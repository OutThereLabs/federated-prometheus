---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator
  namespace: dashboard
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    k8s-app: prometheus-operator
  name: prometheus-operator
  namespace: dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: prometheus-operator
  template:
    metadata:
      labels:
        k8s-app: prometheus-operator
    spec:
      containers:
      - args:
        - --kubelet-service=kube-system/kubelet
        - --logtostderr=true
        - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
        - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.29.0
        - --namespaces=dashboard
        image: 'quay.io/coreos/prometheus-operator:v0.29.0'
        name: prometheus-operator
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
      nodeSelector:
        beta.kubernetes.io/os: linux
      serviceAccountName: prometheus-operator    
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: prometheus-tls
  name: prometheus
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9091
    protocol: TCP
    targetPort: 9091
  selector:
    app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: alertmanager-tls
  name: alertmanager
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9094
    protocol: TCP
    targetPort: 9094
  selector:
    alertmanager: main
---
apiVersion: v1
kind: Route
metadata:
  name: prometheus
spec:
  port:
    targetPort: web
  tls:
    termination: reencrypt
  to:
    kind: Service
    name: prometheus
    weight: 100
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    serviceaccounts.openshift.io/oauth-redirectreference.prometheus: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"prometheus"}}'
  name: prometheus
  namespace: dashboard    
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  alerting:
    alertmanagers:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      name: alertmanager-main
      namespace: dashboard
      port: web
      scheme: https
      tlsConfig:
        caFile: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        serverName: alertmanager-main.dashboard.svc
  baseImage: openshift/prometheus
  containers:
  - name: oauth-proxy
    image: openshift/oauth-proxy:latest
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 9091
      name: http
    args:
    - --https-address=:9091
    - --http-address=
    - --provider=openshift
    - --openshift-service-account=prometheus
    - --upstream=http://localhost:9090
    - --tls-cert=/etc/tls/private/tls.crt
    - --tls-key=/etc/tls/private/tls.key
    - --cookie-secret=MYPROMETHEUSCOOKIESECRET
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-tls  
  externalLabels:
    cluster: bitski-prod-us-west-2
  externalUrl: https://prometheus-dashboard.apps.bitski-prod-us-west-2.outtherelabs.com/
  listenLocal: true
  replicas: 1
  secrets:
  - prometheus-tls
  # - prometheus-proxy
  # - prometheus-k8s-htpasswd
  securityContext: {}
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchExpressions:
    - key: prometheus
      operator: Exists
  additionalScrapeConfigs:
    name: federated-scrape-configs
    key: federated.yaml
  version: v2.3.2
